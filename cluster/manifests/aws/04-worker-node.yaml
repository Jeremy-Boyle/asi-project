#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")

---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: #@ "{}-md".format(data.values.cluster_name)
  namespace: #@ data.values.namespace
spec:
  clusterName: #@ data.values.cluster_name
  replicas: 2
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: #@ data.values.cluster_name
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: #@ "{}-md".format(data.values.cluster_name)
      clusterName: #@ data.values.cluster_name
      failureDomain: #@ "{}c".format(data.values.aws.region)
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AWSMachineTemplate
        name: #@ "{}-md".format(data.values.cluster_name)
      version: #@ data.values.k8s.version
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSMachineTemplate
metadata:
  name: #@ "{}-md".format(data.values.cluster_name)
  namespace: #@ data.values.namespace
spec:
  template:
    spec:
      ami:
        id: #@ data.values.aws.instance.ami_uuid
      rootVolume:
        size: #@ data.values.image.disk_size
        encrypted: true
      iamInstanceProfile: nodes.cluster-api-provider-aws.platform-ops.com
      instanceType: #@ data.values.aws.instance.worker_node
      sshKeyName: #@ data.values.aws.ssh_key
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: #@ "{}-md".format(data.values.cluster_name)
  namespace: #@ data.values.namespace
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: aws
          name: '{{ ds.meta_data.local_hostname }}'