#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@overlay/match by=overlay.not_op(overlay.subset({"kind": "Namespace"})),expects="0+"
---
#@overlay/match missing_ok=True
metadata:
  #@overlay/match missing_ok=True
  namespace: kiam

---
apiVersion: v1
kind: Namespace
metadata:
  name: kiam
  annotations:
    iam.amazonaws.com/permitted: ".*"
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kiam-selfsigned-issuer
  namespace: kiam
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kiam-serving-cert
  namespace: kiam
spec:
  secretName: kiam-ca-tls
  commonName: kiam-ca
  isCA: true
  issuerRef:
    name: kiam-selfsigned-issuer
  usages:
  - any
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kiam-ca-issuer
  namespace: kiam
spec:
  ca:
    secretName: kiam-ca-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kiam-agent
  namespace: kiam
spec:
  secretName: kiam-agent-tls
  commonName: agent
  issuerRef:
    name: kiam-ca-issuer
  usages:
  - any
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kiam-server
  namespace: kiam
spec:
  secretName: kiam-server-tls
  commonName: server
  issuerRef:
    name: kiam-ca-issuer
  usages:
  - any
  dnsNames:
  - localhost
  - kiam-server
  - kiam-server.kiam.svc
  - kiam-server.kiam.svc.cluster.local
  ipAddresses:
  - "127.0.0.1"
#@overlay/match by=overlay.subset({"kind":"DaemonSet"}),expects="0+"
---
spec:

  template:
    spec:
      affinity:
        #@overlay/replace
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
      containers:
        - #@overlay/match by=overlay.all,expects="1+"
          #@overlay/match
          securityContext:
            #@overlay/match missing_ok=True
            capabilities:
              add:
              - NET_ADMIN

#@overlay/match by=overlay.subset({"kind":"Deployment"}),expects="0+"
---
spec:
  template:
    spec:
      containers:
        - #@overlay/match by=overlay.all,expects="1+"
          #@overlay/match
          securityContext:
            #@overlay/match missing_ok=True
            capabilities:
              add:
              - NET_ADMIN