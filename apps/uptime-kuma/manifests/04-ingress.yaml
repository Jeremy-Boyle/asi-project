#@ load("@ytt:data", "data")
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_cache_bypass $http_upgrade;
        }
  name: uptime-kuma
  namepsace: uptime-kuma
spec:
  ingressClassName: nginx
  rules:
  - host: uptime.platform-ops.com
    http:
      paths:
      - backend:
          service:
            name: uptime-kuma
            port:
              number: 3001
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - auth.platform-ops.com
    secretName: uptime-service-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: uptime-serving-cert
  namespace: #@ data.values.namespace
spec:
  dnsNames:
  - uptime.platform-ops.com
  issuerRef:
    kind: Issuer
    name: uptime-selfsigned-issuer
  secretName: uptime-service-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: uptime-selfsigned-issuer
  namespace: #@ data.values.namespace
spec:
  selfSigned: {}
---